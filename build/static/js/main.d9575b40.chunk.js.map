{"version":3,"sources":["services/persons.js","Notification.jsx","Filter.jsx","PersonList.jsx","Form.jsx","App.js","index.js"],"names":["url","axios","get","person","post","id","put","delete","Notification","notification","error","className","Filter","filter","handleFilterChange","value","onChange","PersonList","persons","handleDelete","name","toLowerCase","includes","sort","p1","p2","map","key","number","onClick","Form","handleSubmit","handleChange","newName","newNumber","onSubmit","type","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","setError","useEffect","personService","then","result","data","handleNotification","text","_error","setTimeout","resetInputs","event","target","preventDefault","personWithSameName","find","window","confirm","updatedPerson","response","newPersons","concat","catch","length","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9575b40.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst url = process.env.NODE_ENV === 'development' ? \n\t'http://localhost:3001/api/persons' : '/api/persons';\n\nconst getAll = () => axios.get(url);\n\nconst create = person => axios.post(url, person);\n\nconst update = (person, id) => axios.put(`${url}/${id}`, person);\n\nconst deletePerson = id => axios.delete(`${url}/${id}`)\n\nexport default {\n\tgetAll, \n\tcreate,\n\tupdate,\n\tdeletePerson\n}","import React from 'react';\n\nconst Notification = ({notification, error}) => {\n\treturn (<div className={`notification ${error ? 'error' : ''}`}>\n\t\t{notification}\n\t</div>);\n}\n\nexport default Notification;","import React from 'react';\n\nconst Filter = ({ filter, handleFilterChange}) => (\n\t<p>\n\t\tfilter shown with\n\t\t<input className='input filter' value={filter} onChange={handleFilterChange}/>\n\t</p>\n);\n\nexport default Filter;","import React from 'react';\n\nconst PersonList = ({ persons, filter, handleDelete }) => (\n\t<>\n\t\t{persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\t\t\t\t.sort((p1, p2) => p1.name < p2.name ? -1 : 1)\n\t\t\t\t.map(person => <div key={person.id}>{person.name} {person.number} <button name={person.id} onClick={handleDelete}>Delete</button></div>)\n\t\t}\n\t</>\n\t\n);\n\nexport default PersonList;","import React from 'react';\n\nconst Form = ({ handleSubmit, handleChange, newName, newNumber }) => (\n\t<form onSubmit={handleSubmit}>\n\t<div className='input-container'>\n\t\t  name: <input className='input' value={newName} name='name' onChange={handleChange}/>\n\t\t  number: <input className='input' value={newNumber} name='number' onChange={handleChange}/>\n\t</div>\n\t<div>\n\t\t<button type=\"submit\">add</button>\n\t</div>\n\t</form>\n\n);\n\nexport default Form;","import React, { useState, useEffect } from 'react';\n\nimport personService from './services/persons';\nimport Notification from './Notification.jsx';\nimport Filter from './Filter.jsx';\nimport PersonList from './PersonList.jsx';\nimport Form from './Form';\n\n\nconst App = () => {\n\tconst [ persons, setPersons] = useState([]);\n\tconst [ newName, setNewName ] = useState('');\n\tconst [ newNumber, setNewNumber ] = useState('');\n\tconst [ filter, setFilter ] = useState('');\n\tconst [ notification, setNotification ] = useState('');\n\tconst [ error, setError ] = useState(false);\n\n\tuseEffect(() => {\n\t\tpersonService\n\t\t\t.getAll()\n\t\t\t.then(result => setPersons(result.data));\n\t}, []);\n\n\tconst handleNotification = (text, _error = false) => {\n\t\tsetNotification(text);\n\t\t_error && setError(true);\n\t\tsetTimeout(() => {\n\t\t\tsetNotification('');\n\t\t\t_error && setError(false);\n\t\t}, 5000)\n\t}\n\n\tconst handleChange = (event) => event.target.name === 'name' ? setNewName(event.target.value) : setNewNumber(event.target.value);\n\n\tconst handleFilterChange = (event) => setFilter(event.target.value); \n\n\tconst resetInputs = () => {\n\t\tsetNewNumber('');\n\t\tsetNewName('');\n\t}\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst personWithSameName = persons.find(person => person.name.toLowerCase() === newName.toLowerCase());\n\t\tif (personWithSameName && newNumber && window.confirm(`${newName} is already added to phonebooke, replace the old number with a new one?`)){\n\t\t\tconst updatedPerson = {name: newName, number: newNumber}\n\t\t\tconst { id } = personWithSameName;\n\t\t\tpersonService\n\t\t\t\t.update(updatedPerson, id)\n\t\t\t\t.then(response => {\n\t\t\t\t\thandleNotification(`Updated ${newName}`);\n\t\t\t\t\tconst newPersons = persons\n\t\t\t\t\t\t.filter(person => person.name.toLowerCase() !== newName.toLowerCase())\n\t\t\t\t\t\t.concat(response.data);\n\t\t\t\t\tsetPersons(newPersons);\n\t\t\t\t\tresetInputs();\n\t\t\t\t})\n\t\t\t\t.catch(() => handleNotification(`Failed to update ${newName}'s information to phonebook`, true))\n\t\t} else if (newName && newNumber){\n\t\t\tconst newPerson = {name: newName, number: newNumber}\n\t\t\tpersonService\n\t\t\t\t.create(newPerson)\n\t\t\t\t.then(response => {\n\t\t\t\t\thandleNotification(`Added ${newName}`);\n\t\t\t\t\tsetPersons(persons.concat(response.data));\n\t\t\t\t\tresetInputs();\n\t\t\t\t})\n\t\t\t\t.catch((error) => handleNotification(error.response.data.error, true))\n\t\t}\n\t}\n\n\tconst handleDelete = (event) => {\n\t\tconst id = event.target.name;\n\t\tconst personToDelete = persons.find(person => person.id === id);\n\t\tif (window.confirm(`Delete ${personToDelete.name}?`)){\n\t\t\tpersonService\n\t\t\t\t.deletePerson(id)\n\t\t\t\t.then(() => {\n\t\t\t\t\thandleNotification(`Deleted ${personToDelete.name}`);\n\t\t\t\t\tconst newPersons = persons.filter(person => person.id !== id);\n\t\t\t\t\tsetPersons(newPersons);\n\t\t\t\t})\n\t\t\t\t.catch(() => handleNotification(`Information of ${personToDelete.name} has already been removed from server`, true));\n\t\t\t}\n\t\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{notification && <Notification notification={notification} error={error}/>}\n\t\t\t<h1>Phonebook</h1>\n\n\t\t\t<Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n\t\t\t<h2>Add a new</h2>\n\t\t\t<Form handleSubmit={handleSubmit} handleChange={handleChange} newNumber={newNumber} newName={newName} />\n\t\t\n\t\t\t<h2>Numbers</h2>\n\t\t\t{persons.length > 0 && <PersonList persons={persons} handleDelete={handleDelete} filter={filter} />}\n\t\t</div>\n\t);\n\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}